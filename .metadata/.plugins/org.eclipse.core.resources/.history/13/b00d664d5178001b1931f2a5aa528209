package com.phonebook.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.phonebook.eniity.ContactEntity;
import com.phonebook.service.ContactService;

@WebMvcTest(value = ContactRestController.class)
public class ContactRestControllerTest {

	@MockBean
	private ContactService service;

	// it is used to send a request
	@Autowired
	private MockMvc mockMvc;

	public void test_saveContact() throws Exception {

		when(service.saveContact(Mockito.any())).thenReturn(true);
		
		ContactEntity contact= new ContactEntity(101, "Akash Madke", "akashmadke@gmail.com", 8522255);
		
		ObjectMapper mapper=new ObjectMapper();
		String json = null;
		try {
			json = mapper.writeValueAsString(contact);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		
		// make a request to REST controller-create post request
		MockHttpServletRequestBuilder reqBuilder = MockMvcRequestBuilders.post("/save").content("application/json")
				.content(json);
		
		//send a request
		MvcResult mvcResult = mockMvc.perform(reqBuilder).andReturn();
		//get response
		MockHttpServletResponse response = mvcResult.getResponse();
		
		int status = response.getStatus();
		
		assertEquals(201, status);
	}

}
